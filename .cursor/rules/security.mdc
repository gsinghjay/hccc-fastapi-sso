---
description: Security best practices
globs: app/core/security.py, app/api/**/*.py
---

# Security Implementation Rules

- Implement proper JWT validation and token management using FastAPI's security utilities
- Use OAuth2 with password flow for authentication
- Implement proper OpenAPI security schemes
- Use environment variables for sensitive data:
  - Use SecretStr for sensitive fields
  - Implement proper validation
  - Never log sensitive data
- Apply CORS restrictions appropriately:
  - Strict in production
  - Configurable in development
  - Validate origins properly
- Hash passwords using bcrypt
- Implement proper rate limiting:
  - Per-IP rate limiting
  - Configurable limits
  - Proper error responses
- Log security events in JSON format
- Use secure headers and middleware:
  - CSP with appropriate policies
  - HSTS in production
  - XSS protection
  - Frame options
  - Content type options
- Ensure HTTPS in production:
  - Use Traefik with Let's Encrypt
  - Proper certificate management
  - HTTPS redirect
- Use FastAPI's security dependencies
- Document security schemes in OpenAPI
- Implement Bearer token authentication
- Use Pydantic models for security schemas
- Handle authentication errors properly
- Implement proper scheme handling:
  - Force HTTPS in production
  - Handle X-Forwarded-Proto
  - Proper redirect handling